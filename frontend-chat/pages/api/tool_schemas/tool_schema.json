[
  {
    "type": "function",
    "function": {
      "name": "generateImage",
      "description": "Generates exactly one image using DALL-E 3. Do not make multiple calls to this function in the same conversation turn. Only generate one image per user request. The prompt used to generate the image must always be included in the response to the user.",
      "parameters": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "A detailed text description for generating exactly one image. The description should be vivid and specific enough to ensure accurate image generation. The prompt used must be provided to the user in the response."
          },
          "size": {
            "type": "string",
            "enum": ["1024x1024", "1792x1024", "1024x1792"],
            "description": "The size of the single generated image. Select from one of the predefined sizes."
          },
          "style": {
            "type": "string",
            "enum": ["vivid", "natural"],
            "description": "The style of the single generated image. 'vivid' produces a hyper-real, dramatic image, while 'natural' results in a more realistic, less exaggerated depiction."
          }
        },
        "required": ["prompt", "size", "style"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "searchWeb",
      "description": "Searches the web using a string search query and returns results for the LLM to use in crafting a thoughtful, informed response to the user's request. Any URLs present in the response must be provided to the user along with the crafted response.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The search query to be used for web search. This should be a well-formed string query to retrieve relevant and up-to-date information."
          }
        },
        "required": ["query"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "wikiSearch",
      "description": "Searches Wikipedia using a string search query and returns results for the LLM to use in crafting a thoughtful, informed response to the user's request. Any URLs present in the response must be provided to the user along with the crafted response.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action to perform, typically 'query'."
          },
          "searchString": {
            "type": "string",
            "description": "The search query to be used for Wikipedia search. This string should be detailed enough to yield specific results."
          }
        },
        "required": ["action", "searchString"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getStockInfo",
      "description": "Fetches financial information about stocks using their ticker symbols. Returns various types of data including current price, dividends, splits, company information, financials, and recommendations. Use this function when users ask about stock market information or specific companies' financial data.",
      "parameters": {
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of stock ticker symbols (e.g., 'AAPL' for Apple, 'MSFT' for Microsoft)"
          },
          "info_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "current_price",
                "dividends",
                "splits",
                "company_info",
                "financials",
                "recommendations"
              ]
            },
            "description": "Types of information to fetch for each ticker. Select one or more from the available options."
          }
        },
        "required": ["tickers", "info_types"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getCryptoInfoFromCMC",
      "description": "Fetches market data and description for a specified cryptocurrency from CoinMarketCap using its token symbol. The information includes market capitalization, total volume, circulating supply, total supply, undiluted market cap, description of the cryptocurrency, and its logo. Only use information from the response that is needed to answer the user. The correct URL for Worldcoin is https://worldcoin.org/ ignore any result that differs. NEVER use ticker QRK",
      "parameters": {
        "type": "object",
        "properties": {
          "token_symbol": {
            "type": "string",
            "description": "The symbol of the cryptocurrency on CoinMarketCap, e.g., 'BTC' for Bitcoin, 'ETH' for Ethereum, 'WLD' for Worldcoin, 'APT' for Aptos."
          }
        },
        "required": ["token_symbol"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "queryArxiv",
      "description": "Searches arXiv for academic papers and research articles. Returns detailed paper information including titles, authors, abstracts, and publication dates. Use this when users request scientific papers, research articles, or academic publications. Any URLs or DOIs in the response must be provided to the user.",
      "parameters": {
        "type": "object",
        "properties": {
          "search_query": {
            "type": "string",
            "description": "The search query for finding academic papers. Should be specific enough to return relevant research papers."
          },
          "max_results": {
            "type": "integer",
            "description": "The maximum number of papers to return in the response. Use this to limit the number of results."
          },
          "sort_by": {
            "type": "string",
            "enum": ["relevance", "lastUpdatedDate", "submittedDate"],
            "description": "How to sort the results. 'submittedDate' will show the most recent papers first."
          },
          "sort_order": {
            "type": "string",
            "enum": ["ascending", "descending"],
            "description": "The order of the sorted results. Use 'descending' to see newest papers first when sorting by date."
          }
        },
        "required": ["search_query", "max_results", "sort_by", "sort_order"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
        "name": "getTrendingCryptos",
        "description": "Fetches a list of trending cryptocurrencies from coingecko. This function provides an option to fetch based on popularity, top gainers, or market cap.",
        "parameters": {
            "type": "object",
            "properties": {
                "option": {
                    "type": "string",
                    "enum": ["popularity", "top_gainers", "market_cap"],
                    "description": "The option to determine the type of trending cryptocurrencies to fetch: popularity, top gainers, or market cap."
                }
            },
            "required": ["option"],
            "additionalProperties": false
        },
        "strict": true
    }
},
{
  "type": "function",
  "function": {
    "name": "searchNftCollection",
    "description": "Searches for NFT collections on the Aptos blockchain. Returns detailed collection information including supply, floor price, volume, and verification status. Use this when users ask about specific NFT collections.",
    "parameters": {
      "type": "object",
      "properties": {
        "collection_name": {
          "type": "string",
          "description": "The name of the NFT collection to search for. Should be specific enough to find the desired collection."
        }
      },
      "required": ["collection_name"],
      "additionalProperties": false
    },
    "strict": true
  }
},
{
  "type": "function",
  "function": {
    "name": "searchTrendingNFT",
    "description": "Fetches trending NFT collections from the Aptos blockchain. Returns collection titles and floor prices sorted by different metrics over various time periods. Use this when users ask about trending or popular NFT collections.",
    "parameters": {
      "type": "object",
      "properties": {
        "period": {
          "type": "string",
          "enum": ["days_1", "days_7", "days_14", "days_30", "days_60", "days_90", "all_time"],
          "description": "The time period to analyze trending collections. Ranges from 1 day to all time.",
          "default": "days_1"
        },
        "trending_by": {
          "type": "string",
          "enum": ["crypto_volume", "usd_volume", "trades_count", "average_trade"],
          "description": "The metric to sort collections by: crypto volume (in APT), USD volume, number of trades, or average trade value.",
          "default": "crypto_volume"
        },
        "limit": {
          "type": "integer",
          "enum": [5, 10, 20, 40],
          "description": "The number of trending collections to return.",
          "default": 10
        }
      },
      "required": ["period", "trending_by", "limit"],
      "additionalProperties": false
    },
    "strict": true
  }
},
{
  "type": "function",
  "function": {
    "name": "createSoundEffect",
    "description": "Generates audio sound effects from text descriptions using AI. Best for creating specific sound effects, foley sounds, musical elements, or ambient sounds. Returns ONLY the sound effect URL wrapped in [Sound Effect: url] format. No additional text or formatting should be added.",
    "parameters": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "A detailed description of the sound effect to generate. Use specific audio terminology and natural language to describe the desired sound. Examples include 'high-quality footsteps on wooden floor', '90s hip-hop drum loop', 'sound designed whoosh and braaam impact', or 'old-school funky brass section from an old vinyl sample, stem, 88bpm in F# minor'. Incorporate terms like 'foley', 'whoosh', 'impact', 'braaam', 'glitch', 'drone', and onomatopoeias (e.g., 'oink', 'meow') to specify the type of sound effect. For musical prompts, use terms like 'stem', 'BPM', 'key', 'loop', 'sample', and 'one-shot'."
        },
        "duration_seconds": {
          "type": "number",
          "description": "The desired duration of the sound effect in seconds. Must be between 0.5 and 22 seconds. For complex sounds or loops, consider using longer durations within this range."
        },
        "prompt_influence": {
          "type": "number",
          "description": "Controls how strictly the generation follows the prompt (value between 0.1 and 1.0). 1.0 means strict adherence, lower values allow more creative interpretation. Use higher values for precise sound effects and lower values for creative variations."
        }
      },
      "required": ["text", "duration_seconds", "prompt_influence"],
      "additionalProperties": false
    },
    "strict": true
  }
}
]
