[
  {
    "type": "function",
    "function": {
      "name": "generateImage",
      "description": "Generates an image using DALL-E 3.",
      "parameters": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "The detailed description of the image to generate. You must create a perfect prompt based on the users request or description. Think about the appropiate style and size of the image based on the final prompt."
          },
          "size": {
            "type": "string",
            "enum": ["1024x1024", "1792x1024", "1024x1792"],
            "description": "The size of the generated image."
          },
          "style": {
            "type": "string",
            "enum": ["vivid", "natural"],
            "description": "The artistic style of the image."
          }
        },
        "required": ["prompt", "size", "style"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "searchWeb",
      "description": "Performs a web search for the given query and returns text content with an array of citations. The returned content is comprehensive and should be provided in full to the user (DO NOT SUMMERIZE IT), with only additonal thoughts and commentary to the response content in your unique style.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The query string to search for."
          }
        },
        "required": ["query"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "wikiSearch",
      "description": "Searches Wikipedia for the given query. Taylor the search based on the users request.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action to perform, usually 'query'."
          },
          "searchString": {
            "type": "string",
            "description": "The term or phrase to search for on Wikipedia."
          }
        },
        "required": ["action", "searchString"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getStockInfo",
      "description": "Fetches detailed financial data about specified stocks.",
      "parameters": {
        "type": "object",
        "properties": {
          "tickers": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Stock ticker symbols to retrieve data for."
          },
          "info_types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["current_price", "dividends", "splits", "company_info", "financials", "recommendations"]
            },
            "description": "The specific types of stock information to retrieve."
          }
        },
        "required": ["tickers", "info_types"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getCryptoInfoFromCMC",
      "description": "Fetches crypto market data for a specified token.",
      "parameters": {
        "type": "object",
        "properties": {
          "token_symbol": {
            "type": "string",
            "description": "The symbol of the cryptocurrency to look up."
          }
        },
        "required": ["token_symbol"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "queryArxiv",
      "description": "Fetches academic papers from arXiv. Taylor  the search and number of results to return based on the users request.",
      "parameters": {
        "type": "object",
        "properties": {
          "search_query": {
            "type": "string",
            "description": "The search query for the papers."
          },
          "max_results": {
            "type": "integer",
            "description": "The number of papers to return."
          },
          "sort_by": {
            "type": "string",
            "enum": ["relevance", "lastUpdatedDate", "submittedDate"],
            "description": "The sorting method for the results."
          },
          "sort_order": {
            "type": "string",
            "enum": ["ascending", "descending"],
            "description": "The sorting order of the results."
          }
        },
        "required": ["search_query", "max_results", "sort_by", "sort_order"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getTrendingCryptos",
      "description": "Fetches trending tokens from coingecko.",
      "parameters": {
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "enum": ["popularity", "top_gainers", "market_cap"],
            "description": "The metric to use for identifying trends."
          },
          "limit": {
            "type": "integer",
            "enum": [10, 20, 50, 100, 250],
            "description": "The number of results to return."
          }
        },
        "required": ["option", "limit"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "searchNftCollection",
      "description": "Searches for an NFT collection on specified blockchain.",
      "parameters": {
        "type": "object",
        "properties": {
          "collection_name": {
            "type": "string",
            "description": "The name of the NFT collection to search for."
          },
          "chain": {
            "type": "string",
            "enum": ["aptos", "sui", "movement"],
            "description": "The blockchain to search on."
          }
        },
        "required": ["collection_name", "chain"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "searchTrendingNFT",
      "description": "Fetches trending NFT collections based on specified metrics.",
      "parameters": {
        "type": "object",
        "properties": {
          "period": {
            "type": "string",
            "enum": ["days_1", "days_7", "days_14", "days_30", "days_60", "days_90", "all_time"],
            "description": "The timeframe for identifying trends."
          },
          "trending_by": {
            "type": "string",
            "enum": ["crypto_volume", "usd_volume", "trades_count", "average_trade"],
            "description": "The metric used to identify trends."
          },
          "limit": {
            "type": "integer",
            "enum": [5, 10, 20, 40],
            "description": "The number of results to return."
          },
          "chain": {
            "type": "string",
            "enum": ["aptos", "sui", "movement"],
            "description": "The blockchain to fetch trending collections from."
          }
        },
        "required": ["period", "trending_by", "limit", "chain"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "createSoundEffect",
      "description": "Generates a sound effect based on a provided descriptive prompt that you must create based on the users request. Think about and use the duration and prompt influence to create a sound effect that is unique, creative, and appropiate for the users request.",
      "parameters": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The description of the sound to generate."
          },
          "duration_seconds": {
            "type": "number",
            "description": "The duration of the sound in seconds - minimum 0.5, maximum 20."
          },
          "prompt_influence": {
            "type": "number",
            "description": "Controls how closely to follow the provided description - minimum 0, maximum 1."
          }
        },
        "required": ["text", "duration_seconds", "prompt_influence"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "fetchUserNFTCollections",
      "description": "Fetches NFT collections associated with the user's Aptos wallet.",
      "parameters": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getAllTopics",
      "description": "Fetches all available topics from blockchain social network.",
      "parameters": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The date to fetch topics with format YYYY-MM-DD."
          }
        },
        "additionalProperties": false,
        "required": ["date"]
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getTokenStats",
      "description": "Fetches token stats from handlefinder.",
      "parameters": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "enum": [5, 10, 15, 25, 50],
            "description": "The number of results to return."
          },
          "page": {
            "type": "integer",
            "description": "The page number for pagination."
          }
        },
        "required": ["limit", "page"],
        "additionalProperties": false
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getTrendingUsers",
      "description": "Fetches trending users from handlefinder based on specified query",
      "parameters": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "The page number for pagination."
          },
          "limit": {
            "type": "integer",
            "description": "The number of results to return."
          },
          "ratio": {
            "type": "string",
            "enum": ["Likes", "Followers"],
            "description": "The ratio of posts to followers."
          },
          "protocol": {
            "type": "string",
            "enum": ["Lens"]
          }
        },
        "additionalProperties": false,
        "required": ["page", "limit", "ratio", "protocol"]
        
      },
      "strict": true
    }
  },
  {
    "type": "function",
    "function": {
      "name": "getOnchainActions",
      "description": "Fetches onchain actions in aptos blockchain. eg. get balances, swap tokens Panora, transfers tokens, etc...",
      "parameters": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "The prompt for the onchain action."
          }
        },
        "required": ["prompt"],
        "additionalProperties": false
      }
    },
    "strict": true
  }
]
